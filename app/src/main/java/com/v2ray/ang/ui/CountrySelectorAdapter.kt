package com.v2ray.ang.uiimport android.content.Contextimport android.view.LayoutInflaterimport android.view.ViewGroupimport androidx.core.content.ContextCompatimport androidx.recyclerview.widget.RecyclerViewimport com.v2ray.ang.Rimport com.v2ray.ang.databinding.ItemCountrySelectorBindingimport com.v2ray.ang.dto.Countryclass CountrySelectorAdapter : RecyclerView.Adapter<CountrySelectorAdapter.CountryViewHolder>() {    private var countries = listOf<Country>()    private var listener: OnCountryClickListener? = null    var isSwitching = false      interface OnCountryClickListener {        fun onCountryClick(countryCode: String)    }    fun setOnCountryClickListener(listener: OnCountryClickListener?) {        this.listener = listener    }    fun initializeCountries(context: Context) {        countries = listOf(            Country("jp", context.getString(R.string.country_jp), R.drawable.jp),                Country("us", context.getString(R.string.country_us), R.drawable.us),            Country("jj", context.getString(R.string.country_jj), R.drawable.jj),                Country("in", context.getString(R.string.country_in), R.drawable.`in`),            Country("si", context.getString(R.string.country_si), R.drawable.si),            Country("au", context.getString(R.string.country_au), R.drawable.au),            Country("ca", context.getString(R.string.country_ca), R.drawable.ca),            Country("ge", context.getString(R.string.country_ge), R.drawable.ge),            Country("ir", context.getString(R.string.country_ir), R.drawable.ir),            Country("ki", context.getString(R.string.country_ki), R.drawable.ki),            Country("fr", context.getString(R.string.country_fr), R.drawable.fr),            Country("sw", context.getString(R.string.country_sw), R.drawable.sw)        )    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): CountryViewHolder {        val binding = ItemCountrySelectorBinding.inflate(            LayoutInflater.from(parent.context), parent, false        )        return CountryViewHolder(binding)    }    override fun onBindViewHolder(holder: CountryViewHolder, position: Int) {        holder.bind(countries[position])    }    override fun getItemCount() = countries.size    fun setSelectedCountry(countryCode: String) {        countries.forEach { it.isSelected = false }        countries.find { it.code == countryCode }?.let { country ->            country.isSelected = true        }        notifyDataSetChanged()    }    inner class CountryViewHolder(private val binding: ItemCountrySelectorBinding) :        RecyclerView.ViewHolder(binding.root) {        fun bind(country: Country) {            binding.flagImage.setImageResource(country.flagRes)            binding.countryName.text = country.name            if (country.isSelected) {                binding.countryItemBg.setBackgroundColor(                    ContextCompat.getColor(binding.root.context, R.color.colorAccent)                )                binding.countryName.setTextColor(                    ContextCompat.getColor(binding.root.context, android.R.color.white)                )            } else {                binding.countryItemBg.setBackgroundColor(                    ContextCompat.getColor(binding.root.context, android.R.color.transparent)                )                binding.countryName.setTextColor(                    ContextCompat.getColor(binding.root.context, android.R.color.black)                )            }            binding.countryItemBg.setOnClickListener {                if (!isSwitching && !country.isSelected) {                    listener?.onCountryClick(country.code)                }            }            binding.countryItemBg.alpha = if (isSwitching) 0.5f else 1.0f        }    }}
package com.v2ray.ang.fmtimport com.v2ray.ang.dto.EConfigTypeimport com.v2ray.ang.dto.ProfileItemimport com.v2ray.ang.dto.V2rayConfig.OutboundBeanimport com.v2ray.ang.extension.isNotNullEmptyimport com.v2ray.ang.handler.V2rayConfigManagerobject HttpFmt : FmtBase() {    fun toOutbound(profileItem: ProfileItem): OutboundBean? {        val outboundBean = V2rayConfigManager.createInitOutbound(EConfigType.HTTP)        outboundBean?.settings?.servers?.first()?.let { server ->            server.address = getServerAddress(profileItem)            server.port = profileItem.serverPort.orEmpty().toInt()            if (profileItem.username.isNotNullEmpty()) {                val socksUsersBean = OutboundBean.OutSettingsBean.ServersBean.SocksUsersBean()                socksUsersBean.user = profileItem.username.orEmpty()                socksUsersBean.pass = profileItem.password.orEmpty()                server.users = listOf(socksUsersBean)            }        }        return outboundBean    }}
package com.v2ray.angimport android.content.Contextimport androidx.multidex.MultiDexApplicationimport androidx.work.Configurationimport androidx.work.WorkManagerimport com.tencent.mmkv.MMKVimport com.v2ray.ang.AppConfig.ANG_PACKAGEimport com.v2ray.ang.handler.MmkvManagerimport com.v2ray.ang.handler.SettingsManagerimport com.v2ray.ang.util.LanguageManagerclass AngApplication : MultiDexApplication() {    companion object {        lateinit var application: AngApplication    }    override fun attachBaseContext(base: Context?) {        val contextWithLanguage = if (base != null) {            LanguageManager.autoApplyLanguage(base)        } else {            base        }        super.attachBaseContext(contextWithLanguage)        application = this    }    private val workManagerConfiguration: Configuration = Configuration.Builder()        .setDefaultProcessName("${ANG_PACKAGE}:bg")        .build()    override fun onCreate() {        super.onCreate()        MMKV.initialize(this)        initDefaultSettings()        SettingsManager.setNightMode()        WorkManager.initialize(this, workManagerConfiguration)        SettingsManager.initRoutingRulesets(this)        es.dmoral.toasty.Toasty.Config.getInstance()            .setGravity(android.view.Gravity.BOTTOM, 0, 200)            .apply()    }    private fun initDefaultSettings() {        if (MmkvManager.decodeSettingsString(AppConfig.PREF_LOCAL_DNS_ENABLED) == null) {            MmkvManager.encodeSettings(AppConfig.PREF_LOCAL_DNS_ENABLED, true)        }        if (MmkvManager.decodeSettingsString(AppConfig.PREF_ROUTING_DOMAIN_STRATEGY) == null) {            MmkvManager.encodeSettings(AppConfig.PREF_ROUTING_DOMAIN_STRATEGY, "IPIfNonMatch")        }    }}
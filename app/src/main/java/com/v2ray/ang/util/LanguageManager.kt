package com.v2ray.ang.utilimport android.content.Contextimport android.content.res.Configurationimport android.os.Buildimport java.util.*object LanguageManager {    fun getSystemLanguage(): String {        val locale = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {            Locale.getDefault()        } else {            @Suppress("DEPRECATION")            Locale.getDefault()        }        val language = locale.language        val country = locale.country        return when {            language == "zh" -> "zh"              language == "zh" && country in listOf("CN", "TW", "HK", "SG") -> "zh"            else -> "en"          }    }    fun applyLanguage(context: Context, languageCode: String): Context {        val locale = when (languageCode) {            "zh" -> Locale.SIMPLIFIED_CHINESE            else -> Locale.ENGLISH        }        Locale.setDefault(locale)        val configuration = Configuration(context.resources.configuration)        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {            configuration.setLocale(locale)        } else {            @Suppress("DEPRECATION")            configuration.locale = locale        }        return if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1) {            context.createConfigurationContext(configuration)        } else {            @Suppress("DEPRECATION")            context.resources.updateConfiguration(configuration, context.resources.displayMetrics)            context        }    }    fun autoApplyLanguage(context: Context): Context {        val systemLanguage = getSystemLanguage()        return applyLanguage(context, systemLanguage)    }}